# You may add here your
# server {
#	...
# }
# statements for each of your virtual hosts to this file

##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##
server {
	listen 141.212.120.96:80;
	server_name baburgess.com;
	return 301 https://$server_name$request_uri;
}
server {
	listen   141.212.120.96:443; ## listen for ipv4; this line is default and implied
	#listen   [::]:80 default ipv6only=on; ## listen for ipv6

	root /usr/share/nginx/www;

	index index.php index.html index.htm;
	add_header Strict-Transport-Security "max-age=17280000";
	ssl on;
	ssl_certificate /usr/share/nginx/certs/bundle.crt;
	ssl_certificate_key /usr/share/nginx/certs/server.key;
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';

	ssl_prefer_server_ciphers on;
	ssl_dhparam /usr/share/nginx/certs/dhparams.pem;
	# Make site accessible from http://localhost/
	server_name baburgess.com;
	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to index.html
		rewrite ^/contact.html https://baburgess.com/#contact permanent;
		rewrite ^/projects.html https://baburgess.com/#projects permanent;
		rewrite ^/resume.html https://baburgess.com/#resume permanent;
		try_files $uri $uri/ /index.html;
		# Uncomment to enable naxsi on this location
#		include /etc/nginx/naxsi.rules
	}
	location /pyramid {
		proxy_pass http://141.212.120.96:8080;
	}
	location /m {
		rewrite ^/ https://baburgess.com/;
	}
	location /store {
		proxy_pass http://141.212.120.96:8080;
	}
	location /upload/ {
		try_files $uri $uri/ /index.php?$args;
# location ~ ^/upload/data/public/.*$ {allow all;}
	}
	location /doc/ {
		alias /usr/share/nginx/doc/;
		autoindex on;
		allow 127.0.0.1;
		deny all;
	}


location /upload/data/public/ { if (!-e $request_filename){ rewrite ^/upload/data/public/([a-zA-Z0-9_-]+)\.php$ /upload/data/public/share.php?hash=$1; } rewrite ^/upload/data/public/([a-zA-Z0-9_-]+)--([a-z]+)$ /upload/data/public/share.php?hash=$1&lang=$2; rewrite ^/upload/data/public/([a-zA-Z0-9_-]+)$ /upload/data/public/share.php?hash=$1; } 

location /cgi-bin/ { 
  # Disable gzip (it makes scripts feel slower since they have to complete
  # before getting gzipped)
  gzip off;

  # Set the root to /usr/lib (inside this location this means that we are
  # giving access to the files under /usr/lib/cgi-bin)
  root	/usr/lib;

  # Fastcgi socket
  fastcgi_pass  unix:/var/run/fcgiwrap.socket;

  # Fastcgi parameters, include the standard ones
  include /etc/nginx/fastcgi_params;

  # Adjust non standard parameters (SCRIPT_FILENAME)
  fastcgi_param SCRIPT_FILENAME  /usr/lib$fastcgi_script_name;
}

#location ~ .ajxp_* { deny all; }


	# Only for nginx-naxsi : process denied requests
#	location /RequestDenied {
		# For example, return an error code
#		return 418;
#	}

	#error_page 404 /404.html;

	# redirect server error pages to the static page /50x.html
	#
	#error_page 500 502 503 504 /50x.html;
	#location = /50x.html {
	#	root /usr/share/nginx/www;
	#}

	# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
	#
	location ~ \.php$ {
		fastcgi_split_path_info ^(.+\.php)(/.+)$;
		# NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
	
		# With php5-cgi alone:
		fastcgi_pass 127.0.0.1:9000;
		# With php5-fpm:
		#fastcgi_pass unix:/var/run/php5-fpm.sock;
		fastcgi_index index.php;
		include fastcgi_params;
	}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
location ^~ /data/public/ {
location ~ \.php {
try_files $uri =404;
fastcgi_pass unix:/var/run/php5-fpm.sock;
}
}
}


# another virtual host using mix of IP-, name-, and port-based configuration
#
#server {
#	listen 8000;
#	listen somename:8080;
#	server_name somename alias another.alias;
#	root html;
#	index index.html index.htm;
#
#	location / {
#		try_files $uri $uri/ /index.html;
#	}
#}


# HTTPS server
#
#server {
#	listen 443;
#	server_name localhost;
#
#	root html;
#	index index.html index.htm;
#
#	ssl on;
#	ssl_certificate cert.pem;
#	ssl_certificate_key cert.key;
#
#	ssl_session_timeout 5m;
#
#	ssl_protocols SSLv3 TLSv1;
#	ssl_ciphers ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv3:+EXP;
#	ssl_prefer_server_ciphers on;
#
#	location / {
#		try_files $uri $uri/ /index.html;
#	}
#}
