# Generated by Django 2.0.1 on 2018-06-04 16:33

import autograder.core.fields
import autograder.core.models.ag_test.ag_test_command
from django.db import migrations


# def migrate_ag_test_cmd_fdbk_configs(apps, schema_editor):
#     AGTestCommand = apps.get_model('core', 'AGTestCommand')

#     fdbk_field_names = [
#         'normal_fdbk_config',
#         'ultimate_submission_fdbk_config',
#         'past_limit_submission_fdbk_config',
#         'staff_viewer_fdbk_config',
#     ]
#     for cmd in AGTestCommand.objects.all():
#         for field_name in fdbk_field_names:
#             old_field_name = 'old_' + field_name
#             fdbk = {
#                 'visible': getattr(cmd, old_field_name).visible,

#                 'return_code_fdbk_level': getattr(cmd, old_field_name).return_code_fdbk_level,
#                 'stdout_fdbk_level': getattr(cmd, old_field_name).stdout_fdbk_level,
#                 'stderr_fdbk_level': getattr(cmd, old_field_name).stderr_fdbk_level,

#                 'show_points': getattr(cmd, old_field_name).show_points,

#                 'show_actual_return_code': getattr(cmd, old_field_name).show_actual_return_code,
#                 'show_actual_stdout': getattr(cmd, old_field_name).show_actual_stdout,
#                 'show_actual_stderr': getattr(cmd, old_field_name).show_actual_stderr,

#                 'show_whether_timed_out': getattr(cmd, old_field_name).show_whether_timed_out,
#             }
#             setattr(cmd, field_name, fdbk)

#         cmd.full_clean()
#         cmd.save()


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0015_rename_ag_test_cmd_fdbk_conf_fields'),
    ]

    operations = [
        migrations.AddField(
            model_name='agtestcommand',
            name='normal_fdbk_config',
            field=autograder.core.fields.ValidatedJSONField(default=autograder.core.models.ag_test.ag_test_command.AGTestCommandFeedbackConfig, help_text='Feedback settings for a normal Submission.', serializable_class=autograder.core.models.ag_test.ag_test_command.AGTestCommandFeedbackConfig),
        ),
        migrations.AddField(
            model_name='agtestcommand',
            name='past_limit_submission_fdbk_config',
            field=autograder.core.fields.ValidatedJSONField(default=autograder.core.models.ag_test.ag_test_command.AGTestCommandFeedbackConfig, help_text='Feedback settings for a Submission that is past the daily limit.', serializable_class=autograder.core.models.ag_test.ag_test_command.AGTestCommandFeedbackConfig),
        ),
        migrations.AddField(
            model_name='agtestcommand',
            name='staff_viewer_fdbk_config',
            field=autograder.core.fields.ValidatedJSONField(default=autograder.core.models.ag_test.ag_test_command.AGTestCommandFeedbackConfig.default_staff_viewer_fdbk_config, help_text='Feedback settings for a staff member viewing a Submission from another group.', serializable_class=autograder.core.models.ag_test.ag_test_command.AGTestCommandFeedbackConfig),
        ),
        migrations.AddField(
            model_name='agtestcommand',
            name='ultimate_submission_fdbk_config',
            field=autograder.core.fields.ValidatedJSONField(default=autograder.core.models.ag_test.ag_test_command.AGTestCommandFeedbackConfig.default_ultimate_submission_fdbk_config, help_text='Feedback settings for an ultimate Submission.', serializable_class=autograder.core.models.ag_test.ag_test_command.AGTestCommandFeedbackConfig),
        ),

        # migrations.RunPython(
        #     migrate_ag_test_cmd_fdbk_configs, lambda apps, schema_editor: None
        # )
    ]
