# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2016-11-01 17:01
from __future__ import unicode_literals

import autograder.core.fields
from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0004_auto_20161024_0420'),
    ]

    operations = [
        migrations.AlterField(
            model_name='autogradertestcasebase',
            name='command_line_arguments',
            field=autograder.core.fields.StringArrayField(allow_empty_strings=False, blank=True, default=list, help_text='A list of arguments to be passed to the program\n            being tested.\n            This list is allowed to be empty.\n            This value may NOT be None.\n\n            Individual arguments may contain alphanumeric characters,\n            hyphen, underscore, period, and the equals sign.\n\n            When ValidationError is raised for this field, the error\n            message will be a list containing strings corresponding (in\n            order) to each argument in this field. The strings will\n            contain an error message for their corresponding argument or\n            be empty if their corresponding argument did not cause an\n            error.', max_string_length=255, size=None, string_validators=[], strip_strings=True),
        ),
        migrations.AlterField(
            model_name='autogradertestcasebase',
            name='compiler_flags',
            field=autograder.core.fields.StringArrayField(allow_empty_strings=False, blank=True, default=list, help_text='A list of option flags to be passed to the\n            compiler. These flags are limited to the same character set\n            as the command_line_arguments field.\n            NOTE: This list should NOT include the names of files that\n                need to be compiled and should not include flags that\n                affect the name of the resulting executable program.', max_string_length=255, size=None, string_validators=[], strip_strings=False),
        ),
        migrations.AlterField(
            model_name='autogradertestcasebase',
            name='interpreter_flags',
            field=autograder.core.fields.StringArrayField(allow_empty_strings=False, blank=True, default=list, help_text='A list of objtion flags to be passed to the\n            interpreter. These flags are limited to the same character\n            set as the command_line_argument_field.', max_string_length=255, size=None, string_validators=[], strip_strings=False),
        ),
        migrations.AlterField(
            model_name='autogradertestcasebase',
            name='valgrind_flags',
            field=autograder.core.fields.StringArrayField(allow_empty_strings=False, blank=True, default=['--leak-check=full', '--error-exitcode=1'], help_text="If use_valgrind is True, this field should contain\n            a list of command line arguments to be passed to the\n            valgrind program.\n            NOTE: This list should NOT contain any\n            details about the program being tested.\n            Example value:\n            ['--leak-check=full', '--error-exitcode=42'] This list can\n            be empty. This list can only be None if use_valgrind is\n            False.\n\n            Default value: ['--leak-check=full', '--error-exitcode=1']\n                if use_valgrind is true, None if use_valgrind is False.\n\n            When ValidationError is raised for this field, the error\n            message will be a list containing strings corresponding (in\n            order) to each flag in this field. The strings will contain\n            an error message for their corresponding flag or be empty if\n            their corresponding flag did not cause an error.", max_string_length=255, null=True, size=None, string_validators=[], strip_strings=True),
        ),
    ]
