# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2016-05-08 20:42
from __future__ import unicode_literals

import autograder.core.shared.utilities
import autograder.utilities.fields
import django.core.validators
from django.db import migrations, models
import re


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0008_submission_missing_files'),
    ]

    operations = [
        migrations.AlterField(
            model_name='autogradertestcasebase',
            name='project_files_to_compile_together',
            field=models.ManyToManyField(help_text='Uploaded project files that will be included when\n            compiling the program.\n            NOTE: These files do NOT need to be included in the\n            test_resource_files relationship.', related_name='ag_tests_compiled_by', to='core.UploadedFile'),
        ),
        migrations.AlterField(
            model_name='autogradertestcasebase',
            name='student_files_to_compile_together',
            field=models.ManyToManyField(help_text='Student-submitted files that will be included when\n            compiling the program.\n            NOTE: These files do NOT need to be included in the\n            student_resource_files relationship.', related_name='ag_tests_compiled_by', to='core.ExpectedStudentFilePattern'),
        ),
        migrations.AlterField(
            model_name='autogradertestcasebase',
            name='valgrind_flags',
            field=autograder.utilities.fields.StringArrayField(allow_empty_strings=False, blank=True, default=['--leak-check=full', '--error-exitcode=1'], help_text="If use_valgrind is True, this field should contain\n            a list of command line arguments to be passed to the\n            valgrind program. NOTE: This list should NOT contain any\n            details about the program being tested. For example:\n            ['--leak-check=full', '--error-exitcode=42'] This list can\n            be empty. This list can only be None if use_valgrind is\n            False.\n\n            Default value: ['--leak-check=full', '--error-exitcode=1']\n                if use_valgrind is true, None if use_valgrind is False.\n\n            When ValidationError is raised for this field, the error\n            message will be a list containing strings corresponding (in\n            order) to each flag in this field. The strings will contain\n            an error message for their corresponding flag or be empty if\n            their corresponding flag did not cause an error.", max_string_length=255, null=True, size=None, string_validators=[django.core.validators.RegexValidator(re.compile('^[a-zA-Z0-9-_=.+]+$', 32))], strip_strings=True),
        ),
        migrations.AlterField(
            model_name='expectedstudentfilepattern',
            name='pattern',
            field=autograder.utilities.fields.ShortStringField(help_text="A shell-style file pattern suitable for\n            use with Python's fnmatch.fnmatch()\n            function (https://docs.python.org/3.4/library/fnmatch.html)\n            This string may contain the same characters allowed in\n            project or student files as well as special pattern\n            matching characters. This string must not be empty.\n            NOTE: Patterns for a given project must not overlap,\n                otherwise the behavior is undefined.", max_length=255, strip=False, validators=[autograder.core.shared.utilities.check_shell_style_file_pattern]),
        ),
        migrations.AlterField(
            model_name='submissiongroup',
            name='extended_due_date',
            field=models.DateTimeField(blank=True, default=None, help_text='When this field is set, it indicates that members\n            of this submission group can submit until this specified\n            date, overriding the project closing time. Default value:\n            None', null=True),
        ),
    ]
