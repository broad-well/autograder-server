/courses/
Access rules for GET and POST:
    - Only superusers may use this endpoint. Any other requests will 
        result in 403 Forbidden being returned.

GET: Returns a list of courses
Response format:
{
    "courses": [
        {
            "name": <string>,
            "url": "/courses/<id>/"
        }
    ]
}

POST: Creates a new course
Request format:
{
    "name": <string>
}

Response format:
{
    "name": <string>,
    "url": "/courses/<id>/"
}


--------------------------------------------------------------------------------

/courses/<id>/
GET: Returns the course with the specified id.
Access rules:
    - When a course administrator requests this information, the full 
        response data shown below will be returned.
    - In all other cases, only type, id, name, and urls.self will be included
        in the response.

Response format:
{
    "type": "course",
    "id": <id>,
    "name": <name>,
    "urls": {
        "self": "/courses/<id>/",
        "administrators": "/courses/<id>/administrators/",
        "semesters": "/courses/<id>/semesters/"
    },
}

PATCH: Edits the specified course
Access rules:
    - If the user making this request is not an administrator for the
        specified course, 403 Forbidden will be returned.

Request format:
{
    "name": <string>
}
Note that if any of the above fields are omitted, their values will 
remain unchanged.

Response format: Same as GET /courses/<id>/

--------------------------------------------------------------------------------

/courses/<id>/administrators/
Access rules for GET, POST, PATCH, and DELETE:
    - If the user making any of these requests is not a superuser or 
        an administrator for the specified course, 403 Forbidden 
        will be returned.

GET: Returns a list of usernames that are administrators for the course.
    
Response format:
{
    "administrators": [
        <string username>,
        ...
    ]
}
The format for user objects is the same as in GET /users/<id>/

POST: Adds the listed usernames to the course's administrator list.
Request format:
{
    "administrators": [
        <string username>,
        ...
    ]
}
Response format: Same as GET

DELETE: Removes the listed users from the courses's administrator list.
Request format: Same as POST
Response format: 
    - Same as GET if successful
    - If the request would involve removing the current user from the admin
        list, then 400 Bad request with a string error message will be returned.

--------------------------------------------------------------------------------

/courses/<id>/semesters/
Access rules for GET and POST: 
    - If the user making this request is not an administrator for the
        specified course, 403 Forbidden will be returned.

GET: Returns a list of semesters that belong to this course

Response format:
{
    "semesters": [
        {
            "name": <string>,
            "url": "/semesters/<id>/"
        },
        ...
    ]
}

POST: Creates a semester belonging to this course
Request format:
{
    "name": <string>
}

Response format:
{
    "name": <string>,
    "url": "/semesters/<id>/"
}

